탭 컨트롤 접근성 데모: 개발 지시서 (상세)
문서 목적: 본 문서는 '탭 컨트롤' 웹 접근성 데모 신규 개발을 위한 공식 지시서입니다. 개발자는 본 문서에 명시된 요구사항에 따라 '접근성 미적용(Before)' 및 '접근성 적용(After)' 두 가지 버전의 데모를 구현해야 합니다.

1. 선행 과제: 기존 데모 분석 및 일관성 확보
본격적인 개발에 앞서, 프로젝트의 전체적인 통일성을 위해 기존 '바텀 시트(Bottom Sheet)' 데모를 분석하고 다음 사항들을 신규 데모에 일관되게 적용해야 합니다.

카테고리 구조 분석: '바텀 시트' 데모가 어떤 상위 카테고리(예: 컴포넌트, 탐색 등)에 속해 있는지 확인하고, '탭 컨트롤' 데모도 동일한 분류 체계에 맞게 배치될 수 있도록 구조를 파악합니다.

코드 및 설명 표시 방식 분석:

HTML/CSS/JS 코드 스니펫을 사용자에게 보여주는 UI(예: 코드 블록, 접기/펼치기 기능)를 파악하고 동일한 방식을 적용합니다.

기능 및 접근성 구현에 대한 설명의 톤앤매너, 형식(예: 주요 속성 강조, 목록 사용), 전문 용어 선택 등을 파악하여 일관성을 유지합니다.

레이아웃 구성 분석: '접근성 미적용 예시'와 '접근성 적용 예시'가 페이지 내에서 어떤 레이아웃으로 배치되어 있는지 확인하고 동일한 구성을 따릅니다.

2. 공통 요구사항
'Before'와 'After' 두 예시 모두에 공통으로 적용되는 사항입니다.

2.1. 기본 구조 및 콘텐츠
탭 구성: '과일', '채소', '육류' 3개의 탭으로 구성합니다.

기본 상태: 페이지 최초 로딩 시 '과일' 탭이 기본으로 선택되어 있어야 합니다.

탭 패널 콘텐츠: 각 탭 패널은 아래에 정의된 5개의 아이템 목록을 가집니다.

과일: 사과, 바나나, 딸기, 포도, 오렌지

채소: 당근, 오이, 토마토, 시금치, 양파

육류: 소고기, 돼지고기, 닭고기, 양고기, 오리고기

2.2. '찜하기' 버튼 기능
각 아이템 목록 옆에는 '찜하기' 기능을 하는 <button>을 배치합니다.

버튼의 기본 상태는 '찜 안됨' 상태입니다.

버튼 클릭 시 '찜하기' / '찜 취소' 상태가 시각적으로 토글(Toggle)됩니다.

이 상태는 데모이므로 페이지를 새로고침하면 초기화됩니다.

2.3. 시각적 디자인 가이드라인
디자인 동일성: 'Before'와 'After' 예시의 시각적 디자인(색상, 레이아웃, 폰트, 아이콘 등)은 완벽하게 동일해야 합니다. 기능적 차이 외에 시각적 차이가 없어야 사용자가 접근성 적용의 효과를 명확히 비교할 수 있습니다.

정보 전달: 상태(활성화, 찜하기 등)를 표현할 때 색상에만 의존해서는 안 되며, 텍스트 레이블, 아이콘 모양, 폰트 굵기 등 명확한 시각적 단서를 함께 제공해야 합니다.

명도 대비: 모든 텍스트 및 UI 컴포넌트는 배경과의 명도 대비를 WCAG 2.1 AA 레벨 기준인 4.5:1 이상으로 준수해야 합니다.

3. 'Before': 접근성 미적용 예시 개발 지시
의도적으로 접근성 기능을 제외하여 문제점을 학습할 수 있도록 구현합니다.

마크업:

탭: <ul> > <li> > <button> 구조를 사용하되, ARIA role 속성은 적용하지 않습니다.

동작:

오직 마우스 클릭으로만 탭 전환이 가능해야 합니다.

키보드 인터랙션(화살표 키 등)은 구현하지 않습니다.

'찜하기' 버튼:

클릭 시 시각적으로 '찜' 상태가 된 것처럼 보이게 합니다.

aria-pressed 속성을 사용하지 않습니다. (스크린리더가 상태를 인지할 수 없어야 함)

4. 'After': 접근성 적용 예시 개발 지시
WAI-ARIA Authoring Practices를 준수하여 완벽한 접근성을 제공하도록 구현합니다.

4.1. 마크업 및 ARIA 속성
탭 목록 (<ul>): role="tablist"를 적용하여 이 영역이 탭의 목록임을 보조기기에 알립니다.

탭 아이템 (<li>): role="presentation" (또는 role="none")을 적용하여 <li>의 목록 역할을 제거하고, 자식 요소인 role="tab" 버튼만 탭 구조의 일부로 인식되도록 합니다.

탭 버튼 (<button>):

role="tab": 버튼이 탭 인터페이스의 일부임을 명시합니다.

aria-selected="true/false": 선택 상태를 명시하고 동적으로 변경하여 현재 활성화된 탭을 알립니다.

aria-controls="[패널_ID]": 제어할 탭 패널의 ID를 연결하여 탭과 콘텐츠 간의 관계를 명시합니다.

고유 id를 부여합니다.

탭 패널 (<div>):

role="tabpanel": 이 영역이 탭과 연관된 콘텐츠 패널임을 명시합니다.

aria-labelledby="[탭_ID]": 자신을 제어하는 탭 버튼의 ID를 연결하여 관계를 명시합니다.

콘텐츠 목록 (<ul>): 패널 내부의 아이템 목록 <ul>에도 role="presentation"을 적용하여 불필요한 목록 정보 제공을 방지합니다.

4.2. 키보드 인터랙션
포커스 관리:

**활성화된 탭 버튼만 tabindex="0"**을 가집니다.

**비활성 탭 버튼은 tabindex="-1"**로 설정하여 Tab 키 탐색에서 제외시키고, 화살표 키로만 탐색되도록 합니다.

키보드 탐색:

좌/우 화살표 (→, ←): tablist 내에서 포커스를 이전/다음 탭으로 이동시킵니다. (양 끝에서 순환되어야 함)

Home/End: 각각 첫 번째/마지막 탭으로 포커스를 이동시킵니다.

Tab: 활성화된 탭에서 Tab 키를 누르면 연결된 탭 패널 내부의 첫 번째 포커서블 요소('찜하기' 버튼)로 포커스가 이동해야 합니다.

Shift + Tab: 탭 패널 내부에서 Shift + Tab을 누르면 포커스가 활성화된 탭으로 되돌아와야 합니다.

4.3. '찜하기' 버튼 접근성
aria-pressed 속성을 사용하여 토글 버튼의 눌림 상태를 명시합니다.

버튼 클릭 시 aria-pressed 값을 true/false로 동적으로 변경해야 합니다.

스크린리더 사용자에게 명확한 정보를 제공하기 위해, 버튼의 aria-label을 상태에 따라 동적으로 변경합니다. (예: "사과 찜하기", "사과 찜 취소")

5. 제외 및 주의 사항
탭 패널 tabindex 관리: 버그 발생 가능성 및 비표준 구현을 방지하기 위해, 탭 패널(본문 영역)에는 tabindex="0" 속성을 절대 추가하지 않습니다. 이는 페이지 최초 로딩 시는 물론, 탭 전환 시에도 동일하게 적용됩니다. 탭 패널은 Tab 키를 통해 자연스럽게 진입하도록 구현합니다.

6. 개발 체크리스트
단계

항목

세부 내용

완료

선행

기존 데모 분석

'바텀 시트' 데모의 구조, 스타일, 레이아웃, 설명 방식 분석

[ ]

공통

기본 UI 구현

3개 탭, 탭별 5개 아이템 및 '찜하기' 버튼 UI 구현

[ ]



초기 상태 설정

'과일' 탭 기본 선택

[ ]



디자인 가이드 준수

Before/After 시각적 동일성, 색상 무관 디자인, 명도 대비 준수

[ ]

Before

기능 구현

마우스 클릭으로만 동작하는 탭 기능 구현

[ ]



접근성 미적용

ARIA 속성 및 키보드 인터랙션 미구현 확인

[ ]

After

ARIA 적용

role, aria-* 등 모든 ARIA 속성 적용

[ ]



키보드 인터랙션

화살표, Home/End, Tab 키 동작 완벽 구현

[ ]



aria-pressed 적용

'찜하기' 버튼에 aria-pressed 상태 동적 변경 기능 구현

[ ]



주의사항 준수

탭 패널에 tabindex="0"을 추가하지 않는 로직 확인

[ ]

최종

통합 및 검수

두 예시 통합 후 최종 기능 및 모든 요구사항 준수 여부 검수

[ ]

