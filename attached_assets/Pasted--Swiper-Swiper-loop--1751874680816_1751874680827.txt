네, 말씀하신 것처럼 **Swiper 라이브러리에서 무한 루프를 구현할 때 같은 카테고리를 많이 복제해서 사용하는 경우가 실제로 존재합니다**. 이는 Swiper의 loop 모드 특성과 관련된 일반적인 해결 방법입니다.

## Swiper Loop 모드의 기본 요구사항

Swiper의 공식 API 문서에 따르면, **loop 모드가 제대로 작동하려면 전체 슬라이드 수가 `slidesPerView + slidesPerGroup`보다 많거나 같아야 합니다**[1]. 예를 들어, 한 화면에 5개씩 보여주려면 최소 6개 이상의 슬라이드가 필요합니다.

## 슬라이드 복제가 필요한 상황

### 1. 슬라이드 수가 부족한 경우
카테고리가 5개뿐인데 한 화면에 5개씩 보여줘야 하는 경우, Swiper는 경고 메시지를 표시하며 제대로 작동하지 않습니다[2]:

```
"Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates)"
```

### 2. 개발자들의 실제 해결 방법

많은 개발자들이 이 문제를 해결하기 위해 **슬라이드를 수동으로 복제하는 방법**을 사용하고 있습니다[2][3][4]:

```javascript
// 슬라이드 복제 예시 코드
const slides = el.querySelectorAll('.swiper-slide');

slides.forEach(slide => {
    const clonedSlide = slide.cloneNode(true);
    clonedSlide.classList.add('swiper-slide-duplicated');
    el.querySelector('.swiper-wrapper').appendChild(clonedSlide);
});
```

### 3. 대량 복제 구현 사례

실제로 개발자들은 **필요한 만큼 슬라이드를 반복해서 복제**하는 방법을 사용합니다[3]:

```javascript
// 충분한 슬라이드 수가 될 때까지 반복 복제
while(getTotalWidth(swiper) < window.innerWidth){
    swiper.$el[0].querySelectorAll('.swiper-slide').forEach(function(element){
        let clone = element.cloneNode(true);
        swiper.$el[0].querySelectorAll('.swiper-wrapper')[0].appendChild(clone);
    });
}
```

## 구체적인 구현 패턴

### 자동 슬라이드 복제 함수

최근 개발자들은 **필요한 슬라이드 수를 계산해서 자동으로 복제**하는 더 정교한 방법을 사용합니다[3]:

```javascript
function ensureLoopConditions(swiper) {
    const { slidesPerView, slidesPerGroup } = swiper.params;
    const totalSlides = swiper.slides.length;
    const minSlides = slidesPerView + slidesPerGroup;
    
    if (totalSlides < minSlides) {
        duplicateSlides(swiper, minSlides, slidesPerGroup);
    }
}
```

### 대량 복제를 통한 매끄러운 루프

말씀하신 것처럼 **200-300개의 동일한 카테고리를 만들어서 매끄러운 무한 루프를 구현**하는 것은 실제로 사용되는 방법입니다. 이는 특히 다음과 같은 경우에 유용합니다:

- **매끄러운 애니메이션**: 충분한 슬라이드가 있어야 끊김 없는 루프가 가능
- **다양한 화면 크기 대응**: 반응형 디자인에서 모든 breakpoint에서 작동 보장
- **성능 최적화**: 동적 생성보다는 미리 복제해둔 슬라이드 사용

## 실제 사용 예시

무한 마키(marquee) 효과를 위해 **슬라이드를 대량으로 복제**하는 방법도 널리 사용됩니다[5][6]. 이는 사용자가 어느 방향으로 스와이프하든 항상 매끄럽게 작동하도록 보장합니다.

따라서 **카테고리 15개를 7그룹씩 만들어서 총 200개 정도로 확장하는 방식**은 Swiper 커뮤니티에서 일반적으로 사용되는 검증된 해결책입니다.

[1] https://swiperjs.com/swiper-api
[2] https://github.com/nolimits4web/swiper/issues/7239
[3] https://github.com/nolimits4web/swiper/issues/7254
[4] https://github.com/nolimits4web/swiper/issues/2942
[5] https://www.youtube.com/watch?v=qV-0fBUxAOM
[6] https://www.webbae.net/posts/infinite-marquee-with-swiper-js
[7] https://stackoverflow.com/questions/72424396/why-in-the-infinite-loop-the-sliders-in-swiper-js-jump-when-the-loop-ends
[8] https://github.com/nolimits4web/Swiper/issues/1985
[9] https://lily-im.tistory.com/85
[10] https://raddy.dev/blog/multiple-instances-of-swiperjs-on-the-same-page-with-the-same-settings/
[11] https://swiper-flow-ninja.webflow.io/infinite-loop-swiper
[12] https://swiperjs.com/demos
[13] https://stackoverflow.com/questions/32118999/how-can-i-have-multiple-swiper-slideshows-on-a-single-page
[14] https://forum.framework7.io/t/swiper-auto-and-back-to-first-slide-directly/3515
[15] https://lightrun.com/answers/nolimits4web-swiper-infinite-loop-with-slidesperview-auto-loopfix-issues
[16] https://github.com/nolimits4web/swiper/issues/3599
[17] https://www.reddit.com/r/webflow/comments/18hu1xv/swiperjs_infinite_loop_not_working/
[18] https://swiperjs.com
[19] https://swiperjs.com/changelog
[20] https://blog.logrocket.com/getting-started-swiper-js/